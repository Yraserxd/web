
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Descripción de tu página web">
    <meta name="keywords" content="Palabras clave de tu página web">
    <meta name="author" content="Tu Nombre">
    <title>Balatin - Tu Asistente Virtual</title>
    <link rel="icon" href="favicon.ico" type="image/x-icon">
    <link rel="sitemap" type="application/xml" title="Sitemap" href="sitemap.xml">
    <link rel="robots" type="text/plain" title="Robots" href="robots.txt">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&family=Roboto:wght@400;700&family=Roboto+Condensed:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
    <link rel="preload" href="https://cdn-icons-png.flaticon.com/512/763/763690.png" as="image">
    <link rel="preload" href="https://cdn-icons-png.flaticon.com/512/763/763709.png" as="image">
    <link rel="preload" href="https://cdn-icons-png.flaticon.com/512/763/763704.png" as="image" crossorigin="anonymous">

    <style>
        /* Estilos generales */
        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f9f9f9;
            color: #333;
            overflow-x: hidden;
            -webkit-tap-highlight-color: transparent;
            -webkit-font-smoothing: antialiased;
            touch-action: manipulation;
            font-size: 14px;
            line-height: 1.5;
        }

        /* Hero Section */
        .hero-section {
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color)) !important;
            color: white;
            padding: 60px 20px;
            text-align: center;
            position: relative;
            overflow: hidden;
            transition: all 0.5s ease;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            animation: slideIn 1s ease-out;
            margin: 0 0 20px 0; /* Elimina margen superior */
        }

        @keyframes slideIn {
            from {
                transform: translateY(-50%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes slideOut {
            from {
                transform: translateY(0);
                opacity: 1;
            }
            to {
                transform: translateY(-100%);
                opacity: 0;
            }
        }
        
        /* Nueva animación de cortina mejorada - renamed to avoid conflict */
        @keyframes curtainCloseEffect {
            0% { transform: translateY(0); opacity: 1; }
            100% { transform: translateY(-100%); opacity: 0; }
        }


        .hero-section h1 {
            font-size: 48px;
            font-weight: bold;
            margin: 0;
            position: relative;
            z-index: 1;
            animation: fadeIn 2s ease-in-out;
            color: #ffffff;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
        }

        .hero-section p {
            font-size: 24px;
            margin: 10px 0 0;
            position: relative;
            z-index: 1;
            animation: fadeIn 2.5s ease-in-out;
        }

        .hero-section .message {
            margin-top: 20px;
            font-size: 18px;
            position: relative;
            z-index: 1;
            animation: fadeIn 3s ease-in-out;
            color: #fff;
        }

        /* Botones dentro del Hero */
        .buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
            position: relative;
            z-index: 1;
        }

        button {
            background-color: white;
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
            padding: 12px 24px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 25px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            font-weight: bold;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            animation: pulse 1.5s infinite; /* Adjusted pulse timing */
        }
        
        button:focus-visible {
            outline: 3px solid var(--accent-color);
            outline-offset: 2px;
        }

        @keyframes pulse {
            0% {
                transform: scale(1);
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
            50% {
                transform: scale(1.03); /* Slightly reduced pulse */
                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
            }
            100% {
                transform: scale(1);
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            }
        }

        button:hover {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
            transform: scale(1.05);
        }

        button::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: all 0.5s ease;
        }

        button:hover::after {
            width: 200px;
            height: 200px;
        }

        .close-btn {
            background-color: rgba(245,160,2,0.9);
            color: white;
            border-color: rgba(245,160,2,0.9);
            transition: all 0.3s ease;
        }

        .close-btn:hover {
            background-color: rgba(235,150,2,0.9);
            transform: scale(1.05);
        }

        /* Barra de búsqueda mejorada */
        /* .search-bar styles removed as they seem obsolete by .cat-search-container */

        .search-input { /* General input style, might need adjustments for specific contexts */
            flex: 1;
            padding: 15px;
            border: 2px solid var(--primary-color);
            background: transparent;
            font-size: 16px;
            color: #333;
            border-radius: 30px;
            transition: all 0.3s ease;
        }

        .search-input::placeholder {
            color: #999;
            font-style: italic;
        }

        .search-input:focus {
            outline: none;
            box-shadow: 0 0 20px rgba(245,160,2,0.3);
        }
        .search-input:focus-visible {
            outline: 3px solid var(--accent-color);
            outline-offset: 1px;
        }


        /* Encuesta */
        .survey-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            z-index: 1000;
            justify-content: center;
            align-items: center;
            overflow-y: auto;
        }

        .survey-container {
            background-color: white;
            padding: 40px;
            border-radius: 10px;
            max-width: 500px;
            width: 100%;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
            animation: fadeIn 0.5s ease-in-out;
        }

        .survey-container h2 {
            font-size: 28px;
            margin-bottom: 20px;
        }

        .survey-container .options {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
            margin-bottom: 20px;
        }

        .survey-container .option-btn {
            background-color: #ff4d4d;
            color: white;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 25px;
            transition: background-color 0.3s ease;
        }

        .survey-container .option-btn:hover {
            background-color: #e63c3c;
        }

        @keyframes fadeIn {
            0% { opacity: 0; transform: translateY(-20px); }
            100% { opacity: 1; transform: translateY(0); }
        }


        /* Efecto de movimiento en el banner */
        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 200%;
            height: 100%;
            background: linear-gradient(
                90deg,
                rgba(255,255,255,0) 25%,
                rgba(255,100,100,0.2) 50%,
                rgba(255,255,255,0) 75%
            );
            animation: wave 3s infinite linear;
        }

        @keyframes wave {
            100% { transform: translateX(100%); }
        }

        /* Animación del gatito */
        .cat-wave {
            width: 60px;
            height: 60px;
            background: url('https://cdn-icons-png.flaticon.com/512/763/763690.png') center/contain no-repeat;
            display: inline-block;
            animation: tailWag 1.2s infinite;
        }

        @keyframes tailWag {
            0%, 100% { transform: rotate(0deg); }
            25% { transform: rotate(15deg); }
            75% { transform: rotate(-15deg); }
        }

        .cat-wave:hover {
            animation: waveHand 0.8s infinite; /* waveHand animation needs to be defined if different from tailWag */
        }
         @keyframes waveHand { /* Example definition for waveHand */
            0%, 100% { transform: rotate(0deg) scale(1); }
            25% { transform: rotate(20deg) scale(1.1); }
            50% { transform: rotate(-10deg) scale(1); }
            75% { transform: rotate(15deg) scale(1.05); }
        }


        /* Detalles gatunos */
        .cat-details {
            position: absolute;
            pointer-events: none;
            opacity: 0.3;
        }

        .cat-paw {
            width: 40px;
            height: 40px;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="white"><path d="M12 2a5 5 0 0 0-5 5c0 1.47.58 2.8 1.5 3.8L12 18.3l3.5-4.5c.92-1 1.5-2.33 1.5-3.8a5 5 0 0 0-5-5z"/></svg>') center/contain no-repeat;
            animation: float 3s ease-in-out infinite;
        }

        /* Posicionamiento de elementos gatunos */
        .paw1 { top: 10%; left: 5%; }
        .paw2 { top: 30%; right: 15%; }
        .paw3 { bottom: 20%; left: 20%; }
        .paw4 { bottom: 10%; right: 5%; }

        /* Huellas de gato animadas */
        .cat-paws {
            position: absolute;
            width: 40px;
            height: 40px;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23ffffff"><path d="M12 2a5 5 0 0 0-5 5c0 1.47.58 2.8 1.5 3.8L12 18.3l3.5-4.5c.92-1 1.5-2.33 1.5-3.8a5 5 0 0 0-5-5z"/></svg>') center/contain no-repeat;
            opacity: 0.3;
            animation: pawFloat 3s infinite ease-in-out;
        }

        @keyframes pawFloat {
            0%, 100% { transform: translateY(0) rotate(15deg); }
            50% { transform: translateY(-20px) rotate(-15deg); }
        }

        /* Bigotes decorativos */
        .cat-whiskers {
            position: absolute;
            width: 80px;
            height: 40px;
            border: 2px solid rgba(255,255,255,0.2);
            border-radius: 50%;
            border-top-color: transparent;
            border-right-color: transparent;
            transform: rotate(-30deg);
        }

        .whisker1 { top: 40%; left: -30px; }
        .whisker2 { top: 60%; right: -30px; transform: rotate(30deg); }


        /* Efecto al escribir */
        .meow-input:not(:placeholder-shown) { /* Applied to .meow-input specifically */
            animation: textPop 0.3s ease;
        }
        
        @keyframes textPop {
            50% { transform: scale(1.02); }
        }

        .meow-input:focus { /* Styling for focused .meow-input */
            border-color: #ff4d4d !important; /* Original was #FF8C42, this uses the primary red */
            box-shadow: 0 0 25px rgba(255,77,77,0.2) !important; /* Original was orange shadow */
        }
        /* Removed .search-container::after and related styles as .search-container seems obsolete */

        /* Fondo animado con gatitos */
        .cat-background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
            overflow: hidden;
        }

        .floating-cat {
            position: absolute;
            opacity: 0.1;
            animation: floatCat 15s infinite linear;
        }

        @keyframes floatCat {
            0% {
                transform: translateY(100vh) rotate(0deg);
                opacity: 0;
            }
            50% {
                opacity: 0.15;
            }
            100% {
                transform: translateY(-100vh) rotate(360deg);
                opacity: 0;
            }
        }

        /* Huellas caminando */
        .walking-paws {
            position: absolute;
            width: 50px;
            height: 50px;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23ff9999"><path d="M12 2a5 5 0 0 0-5 5c0 1.47.58 2.8 1.5 3.8L12 18.3l3.5-4.5c.92-1 1.5-2.33 1.5-3.8a5 5 0 0 0-5-5z"/></svg>') center/contain no-repeat;
            animation: walk 20s linear infinite;
            opacity: 0.1;
        }

        @keyframes walk {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(200%); } /* Changed from 200vw for consistency */
        }

        /* Silueta gatuna */
        .cat-silhouette {
            position: absolute;
            width: 100px;
            height: 100px;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23ffcccc"><path d="M12 2a5 5 0 0 0-5 5c0 1.47.58 2.8 1.5 3.8L12 18.3l3.5-4.5c.92-1 1.5-2.33 1.5-3.8a5 5 0 0 0-5-5zM7 7a3 3 0 1 1 6 0 3 3 0 0 1-6 0z"/></svg>') center/contain no-repeat;
            animation: slide 25s linear infinite;
            opacity: 0.05;
        }

        @keyframes slide {
            0% { transform: translateX(-50%) scaleX(1); }
            49% { transform: translateX(150%) scaleX(1); } /* Adjusted from 150vw */
            50% { transform: translateX(150%) scaleX(-1); } /* Adjusted from 150vw */
            100% { transform: translateX(-50%) scaleX(-1); }
        }

        /* Estilos innovadores para la barra de búsqueda gatuna */
        .cat-search-container {
            max-width: 700px;
            margin: 40px auto;
            padding: 25px;
            background: linear-gradient(45deg, #fff0f0, #ffffff); /* Original orange: #fff7f2 */
            border-radius: 20px;
            box-shadow: 0 10px 40px rgba(255,100,100,0.1);
            position: relative;
            overflow: hidden;
            border: 2px solid #FF6B35; /* Original orange */
        }

        .input-container {
            position: relative;
            margin-bottom: 25px;
        }

        .meow-input {
            width: 100%;
            padding: 20px 30px;
            font-size: 18px;
            border: 3px solid #FF6B35 !important; /* Original orange */
            border-radius: 15px;
            background: rgba(255,255,255,0.98) !important;
            color: #333;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            z-index: 2;
            box-sizing: border-box; /* Added for robust sizing */
        }
        .meow-input::placeholder { /* Specific styling for meow-input placeholder */
             color: #aaa; /* Slightly darker than general search-input placeholder */
             font-style: normal; /* Not italic */
        }

        .meow-input:focus { /* Re-affirming focus style based on new base */
            border-color: #FF8C42 !important; /* Lighter orange on focus */
            box-shadow: 0 0 25px rgba(255,140,66,0.2) !important;
            outline: none;
        }


        /* Efecto de huellas dinámicas */
        .paw-prints {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23ff9999" opacity="0.1"><path d="M19.5 12c0-1.103-.897-2-2-2s-2 .897-2 2a2.001 2.001 0 0 0 4 0zm-14 0c0-1.103-.897-2-2-2s-2 .897-2 2a2.001 2.001 0 0 0 4 0zm8.5 5.5c0-1.103-.897-2-2-2s-2 .897-2 2a2.001 2.001 0 0 0 4 0zm-5-5.5c0-1.103-.897-2-2-2s-2 .897-2 2a2.001 2.001 0 0 0 4 0z"/></svg>');
            background-repeat: no-repeat;
            background-position: var(--x) var(--y);
            animation: pawFade 1.5s infinite;
            pointer-events: none;
            z-index: 1;
        }

        @keyframes pawFade {
            0%, 100% { opacity: 0.1; }
            50% { opacity: 0.3; }
        }

        /* Botón premium */
        .purr-button {
            width: 100%;
            padding: 20px 40px;
            background: linear-gradient(135deg, #FF6B35, #FF8C42) !important; /* Original orange gradient */
            border: none;
            border-radius: 15px;
            color: white;
            font-size: 18px;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 12px;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .purr-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255,107,53,0.3); /* Orange shadow: original was (255,77,77,0.3) */
            background: linear-gradient(135deg, #FF8C42, #FF6B35) !important; /* Hover orange gradient */
        }

        .button-glow {
            position: absolute;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle at var(--x) var(--y), 
                rgba(255,255,255,0.4) 0%, 
                transparent 70%);
            opacity: 0;
            transition: opacity 0.3s;
        }

        .purr-button:hover .button-glow {
            opacity: 1;
        }

        .cat-icon { /* General .cat-icon, specific uses might override */
            font-size: 24px;
            filter: drop-shadow(0 2px 3px rgba(0, 0, 0, 0.2));
            background: url('https://cdn-icons-png.flaticon.com/512/763/763709.png') center/contain no-repeat;
            width: 40px;
            height: 40px;
            display: inline-block;
            text-indent: -9999px; /* For image replacement */
            vertical-align: middle; /* Added for better alignment with text */
            animation: tailWag 1.2s infinite; /* Default animation */
        }
        
        /* Specific cat-icon animation for purr-button */
        .purr-button .cat-icon {
             animation: tailWag 1.2s infinite, jump 0.8s ease-in-out infinite;
        }


        @keyframes jump {
            0%, 100% { transform: translateY(0) scale(1); }
            50% { transform: translateY(-8px) scale(1.1); }
        }

        /* Efecto de escritura automática */
        .typing-effect { /* Renamed from .typing-effect::after to be a container */
             position: relative; /* Needed for absolute positioning of the pseudo-element */
        }
        .typing-effect::after {
            content: "|";
            animation: typing 8s infinite;
            color: #ff4d4d; /* Primary red color */
            position: absolute;
            right: 15px; /* Adjusted for padding in meow-input */
            top: 50%;
            transform: translateY(-50%);
            font-weight: bold;
            font-size: 1.2em; /* Make cursor slightly larger */
        }

        @keyframes typing {
            0% { content: "escolar|"; }
            14% { content: "electrónicos|"; }
            28% { content: "juguetes|"; }
            42% { content: "hogar|"; }
            56% { content: "limpieza|"; }
            70% { content: "liquidación|"; }
            84% { content: "cosméticos|"; }
            98% { content: "abarrotes|"; }
            100% { content: "muebles|"; }
        }
        
        /* .quantum-cat-container and related styles seem to be for a different search bar variant, keeping for now */
        @keyframes quantum-meow {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .quantum-cat-container {
            background: linear-gradient(135deg, #FF6B35, #FF8C42, #FFD700);
            border-radius: 20px;
            padding: 3px;
            margin: 20px auto;
            max-width: 800px;
            background-size: 400% 400%;
            animation: quantum-meow 15s ease infinite;
        }

        .neo-meowlogram {
            background: rgba(255, 255, 255, 0.98);
            border-radius: 18px;
            padding: 15px;
            box-shadow: 0 10px 30px rgba(255, 100, 100, 0.1);
            position: relative;
            overflow: hidden;
        }

        .quantum-cat-input {
            flex: 1;
            border: 3px solid #FF8C42;
            padding: 18px 25px;
            font-size: 16px;
            color: #333;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 12px;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
        .quantum-cat-input:focus-visible {
            outline: 3px solid #FF6B35;
            outline-offset: 1px;
        }

        .quantum-cat-input:focus {
            outline: none;
            box-shadow: 0 0 25px rgba(255, 140, 66, 0.3);
        }

        .meow-button {
            background: linear-gradient(45deg, #FF6B35, #FFD700);
            color: white;
            border: none;
            padding: 18px 35px;
            border-radius: 12px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 12px;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .meow-button::before {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(45deg, transparent, rgba(255,255,255,0.3), transparent);
            animation: energy-flow 2s infinite linear; 
        }
        
        @keyframes energy-flow { 
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }


        /* Efectos especiales */
        .quantum-particles {
            position: absolute;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        .quantum-particle {
            position: absolute;
            width: 6px;
            height: 6px;
            background: #FFD700;
            animation: hyper-pulse 1.5s infinite; 
            border-radius: 50%;
        }

        @keyframes hyper-pulse { 
            0%, 100% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.5); opacity: 0.5; }
        }


        /* Modal Mejorado */
        .meow-modal { 
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.7); /* Slightly darker for more focus */
            z-index: 1000;
            padding: 15px;
            align-items: center;
            justify-content: center;
        }

        .meow-content { 
            background: white;
            padding: 2rem;
            border-radius: 15px;
            width: 100%;
            max-width: 500px;
            animation: modalEntrance 0.3s ease-out; 
            position: relative; /* Added for close button positioning */
        }
        
        @keyframes modalEntrance { 
            from { opacity: 0; transform: scale(0.9); }
            to { opacity: 1; transform: scale(1); }
        }

        /* Touch Targets Ampliados */
        button, .category-btn, .meow-button, .opcion-card, .help-option { 
            min-height: 48px;
            min-width: 48px;
            box-sizing: border-box; /* Ensure padding/border don't shrink tappable area */
        }

        /* Estilos para resultados (If dynamically added) */
        .search-results {
            margin: 20px 0;
            max-height: 60vh;
            overflow-y: auto;
        }

        .result-item {
            padding: 15px;
            margin: 10px 0;
            background: #fff5f5;
            border-radius: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .comprar-btn {
            background: #ff4d4d;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .comprar-btn:hover {
            background: #ff3333;
            transform: scale(1.05);
        }

        @keyframes errorShake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            50% { transform: translateX(5px); }
            75% { transform: translateX(-3px); }
        }

        @keyframes happyJump {
            0%, 100% { transform: translateY(0) scale(1); }
            50% { transform: translateY(-10px) scale(1.1); }
        }

        @keyframes noSearchShake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-8px); }
            50% { transform: translateX(8px); }
            75% { transform: translateX(-4px); }
        }

        @keyframes emergencyWag {
            0%, 100% { transform: rotate(0deg); }
            25% { transform: rotate(25deg); }
            50% { transform: rotate(-25deg); }
            75% { transform: rotate(15deg); }
        }

        /* Estilos para la sección de categorías */
        .categories-section {
            margin-top: 20px;
            padding: 15px;
        }

        .categories-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 10px;
            justify-content: center;
        }

        .category-btn {
            background: linear-gradient(135deg, #ff4d4d, #ff884d);
            color: white;
            border: none;
            padding: 12px 15px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            text-align: center;
        }

        .category-btn:hover {
            background: linear-gradient(135deg, #ff884d, #ff4d4d);
            transform: translateY(-3px);
            box-shadow: 0 4px 15px rgba(255,77,77,0.3);
        }

        .category-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255,255,255,0.1);
            border-radius: inherit;
            opacity: 0;
            transition: all 0.3s ease;
        }

        .category-btn:hover::before {
            opacity: 1;
        }
        
        /* Estilos para el menú desplegable */
        .category-select {
            width: 100%;
            padding: 15px 25px;
            border: 2px solid #ff4d4d;
            border-radius: 30px;
            background: linear-gradient(135deg, #fff5f5, #ffffff);
            color: #333;
            font-size: 16px;
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23ff4d4d'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-size: 20px;
            box-shadow: 0 4px 15px rgba(255,77,77,0.1);
        }

        .category-select:hover {
            background: linear-gradient(135deg, #ffffff, #fff5f5);
            box-shadow: 0 4px 20px rgba(255,77,77,0.2);
            transform: translateY(-2px);
        }

        .category-select:focus {
            outline: none;
            border-color: #ff884d;
            box-shadow: 0 0 20px rgba(255,136,77,0.3);
        }
         .category-select:focus-visible {
            outline: 3px solid #FF6B35; /* Consistent focus style */
            outline-offset: 1px;
        }

        .category-select option {
            padding: 15px;
            background: white;
            color: #333;
            border-bottom: 1px solid #eee;
        }

        .category-select option:hover {
            background: #fff5f5 !important;
        }

        /* Estilos premium para el selector */
        .dynamic-category-selector {
            position: relative;
            max-width: 800px;
            margin: 20px auto;
            padding: 15px;
            background: linear-gradient(145deg, #ff6b6b, #ff8e53);
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(255,107,107,0.3);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .dynamic-category-selector:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 40px rgba(255,107,107,0.4);
        }

        .selector-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 20px;
            padding: 10px;
            background: rgba(255,255,255,0.1);
            border-radius: 15px;
        }

        .dynamic-category-selector .cat-icon { 
            font-size: 28px; /* Will be hidden by text-indent if image bg used */
            animation: bounce 2s infinite;
        }

        .selector-title {
            color: white;
            font-size: 20px;
            font-weight: 700;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
        }

        .premium-category-select {
            width: 100%;
            padding: 18px 25px;
            border: 3px solid rgba(255,255,255,0.3);
            border-radius: 15px;
            background: rgba(255,255,255,0.9);
            color: #ff4d4d;
            font-size: 16px;
            font-weight: 600;
            appearance: none;
            cursor: pointer;
            transition: all 0.3s ease;
            backdrop-filter: blur(5px);
             background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23ff4d4d'%3e%3cpath d='M7 10l5 5 5-5z'/%3e%3c/svg%3e"); /* Added dropdown arrow */
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-size: 20px;
        }

        .premium-category-select:hover {
            background: rgba(255,255,255,1);
            transform: scale(1.02);
        }

        .premium-category-select:focus {
            outline: none;
            box-shadow: 0 0 25px rgba(255,77,77,0.4);
        }
        .premium-category-select:focus-visible {
             outline: 3px solid #FF6B35;
             outline-offset: 1px;
        }

        .premium-category-select option {
            padding: 15px;
            background: white;
            color: #ff4d4d;
            border-bottom: 2px solid #ffe5e5;
            font-size: 15px;
            transition: all 0.2s ease;
        }

        .premium-category-select option:hover {
            background: #fff5f5 !important;
            transform: translateX(10px);
        }

        .animated-underline {
            height: 3px;
            background: white;
            width: 0;
            margin: 10px auto 0;
            transition: width 0.3s ease;
        }

        .premium-category-select:focus ~ .animated-underline { /* This will only work if animated-underline is a sibling */
            width: 80%;
        }

        @keyframes bounce {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }

        .categories-banner {
            background: linear-gradient(135deg, #fff5f5 0%, #ffffff 100%);
            padding: 40px 20px;
            margin: 50px 0;
            position: relative;
            overflow: hidden;
        }

        .banner-content {
            max-width: 1200px;
            margin: 0 auto;
            position: relative;
            z-index: 1;
        }

        .banner-header {
            text-align: center;
            margin-bottom: 40px;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }

        .banner-cat-icon {
            width: 100px;
            height: 100px;
            filter: drop-shadow(2px 2px 4px rgba(255,77,77,0.2));
            animation: floatBanner 3s ease-in-out infinite; 
            cursor: pointer; /* Added cursor pointer */
        }

        .banner-title {
            color: #ff4d4d;
            font-size: 2.5rem;
            margin: 0;
            text-shadow: 2px 2px 4px rgba(255,77,77,0.1);
        }

        .category-card {
            background: white;
            border-radius: 20px;
            padding: 30px;
            text-align: center;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            text-decoration: none;
            color: #333;
            box-shadow: 0 4px 20px rgba(0,0,0,0.05);
            position: relative;
            overflow: hidden;
            display: block; /* Ensure it behaves like a block for layout */
        }
        .category-card:focus-visible {
            outline: 3px solid #FF8C42;
            outline-offset: 2px;
            box-shadow: 0 8px 30px rgba(255,140,66,0.25);
        }


        .category-card::before {
            content: '';
            position: absolute;
            bottom: -50px;
            right: -50px;
            width: 100px;
            height: 100px;
            background: rgba(255,77,77,0.1);
            border-radius: 50%;
            transition: all 0.5s ease;
        }

        .category-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 8px 30px rgba(255,77,77,0.15);
        }

        .category-card:hover::before {
            transform: scale(2);
            opacity: 0;
        }

        .card-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
            transition: transform 0.3s ease;
        }
        .card-icon img { /* Ensure images within card-icon are responsive */
            max-width: 100%;
            height: auto;
        }

        .category-card:hover .card-icon {
            transform: scale(1.2) rotate(15deg);
        }

        .category-card h3 {
            color: #ff4d4d;
            margin: 10px 0;
            font-size: 1.5rem;
        }

        .category-card p {
            color: #666;
            font-size: 0.9rem;
            line-height: 1.4;
        }

        @keyframes float { 
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); } /* Reduced from -15px for cat-paw, banner-cat specific below */
        }
        .banner-cat-icon { animation: floatBanner 3s ease-in-out infinite; }
        @keyframes floatBanner { 
             0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
        }


        .cat-modal { 
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7); /* Standardized modal background */
            justify-content: center;
            align-items: center;
            z-index: 1000;
            padding: 15px; 
        }

        .cat-modal .modal-content { 
            background: white;
            border-radius: 20px;
            padding: 25px;
            width: 85%;
            max-width: 500px;
            animation: modalEntry 0.4s ease-out;
            position: relative; 
            box-shadow: 0 10px 30px rgba(0,0,0,0.2); /* Added shadow for depth */
        }
        
        .close-modal { 
            position: absolute;
            top: 15px;
            right: 20px;
            color: #ff4d4d;
            font-size: 30px;
            cursor: pointer;
            transition: transform 0.3s ease, color 0.3s ease; /* Added color transition */
            background: none;
            border: none;
            padding: 0;
            line-height: 1;
            z-index: 10; /* Ensure it's above other modal content */
        }

        .close-modal:hover {
            transform: rotate(90deg) scale(1.2);
            color: #e63c3c; /* Darker red on hover */
        }
        .close-modal:focus-visible {
             outline: 2px solid #FF6B35;
             border-radius: 50%;
        }


        /* TikTok Modal Specific Styles */
        .tiktok-modal {
            display: none; 
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.8); /* Slightly darker for video focus */
            justify-content: center;
            align-items: center;
            z-index: 1000;
            overflow: hidden !important; 
        }

        .tiktok-modal .modal-content { 
            background: #111; /* Dark background for TikTok embed */
            border-radius: 15px; /* Slightly smaller radius */
            padding: 15px; /* Reduced padding */
            width: auto; 
            max-width: 380px; /* Typical TikTok embed width, adjust as needed based on content */
            margin: 2% auto; 
            animation: modalEntry 0.4s ease-out;
            position: relative;
            transform: translateZ(0); 
            overflow: hidden; 
            box-shadow: 0 0 30px rgba(255,77,77,0.3); /* Glow effect */
        }
        
        .tiktok-container { 
            width: 100%;
            display: flex; /* Center the blockquote */
            justify-content: center;
        }

        .tiktok-embed {
            margin: 0 auto !important; 
            display: block !important; 
            min-width: 325px !important; 
            max-width: 100% !important; 
            border-radius: 10px; /* Match modal content's feel */
            overflow: hidden; /* Ensure embed respects border-radius */
        }
        
        .tiktok-embed iframe { 
            width: 100% !important;
            height: auto !important; 
            min-height: 580px; /* Adjusted common TikTok aspect ratio */
            display: block; /* Remove extra space below iframe */
        }


        .premium-cloud {
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            border-radius: 40px;
            padding: 30px;
            margin: 40px auto;
            max-width: 800px;
            position: relative;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(255,77,77,0.3);
            border: 2px solid #ff4d4d;
        }

        .cloud-content {
            position: relative;
            z-index: 2;
            text-align: center;
        }

        .cloud-content h3 {
            color: #fff;
            font-size: 2em;
            margin: 0 0 25px 0;
            text-shadow: 0 0 15px rgba(255,255,255,0.5);
        }

        .cloud-buttons {
            display: grid;
            gap: 20px;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        }

        .glow-button { 
            background: linear-gradient(45deg, #9370db, #6a5acd);
            border: none;
            padding: 20px;
            border-radius: 30px;
            color: white;
            font-size: 1.1em;
            position: relative;
            overflow: hidden;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .glow-button .button-glow { 
            position: absolute;
            top: 0;
            left: -100%;
            width: 200%;
            height: 100%;
            background: linear-gradient(
                45deg,
                transparent,
                rgba(255,255,255,0.3),
                transparent
            );
            animation: glowSlide 3s infinite;
        }

        .epic-help-button {
            background: linear-gradient(45deg, #ffd700, #ff8c00);
            border: 2px solid #ffd700;
            padding: 20px;
            border-radius: 30px;
            color: #2a2a2a;
            font-size: 1.1em;
            font-weight: bold;
            cursor: pointer;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .epic-glow {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(
                45deg,
                transparent,
                rgba(255,255,255,0.3),
                transparent
            );
            opacity: 0.5;
            animation: glowRotate 4s infinite linear;
        }

        .sparkles {
            width: 25px;
            height: 25px;
            background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23ffffff"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/></svg>') center/contain no-repeat;
            animation: sparkleJump 1.5s infinite;
        }

        .cloud-rays {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle at 50% 50%, 
                rgba(255,255,255,0.1) 0%,
                transparent 60%
            );
            animation: raysSpin 20s infinite linear;
        }

        @keyframes glowSlide {
            0% { 
                transform: translateX(-150%); 
                opacity: 0.4;
            }
            50% {
                opacity: 0.8;
            }
            100% { 
                transform: translateX(150%); 
                opacity: 0.4;
            }
        }

        @keyframes glowRotate {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes sparkleJump {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }

        @keyframes raysSpin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .glow-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(106,90,205,0.5);
        }

        .epic-help-button:hover {
            transform: scale(1.05);
            box-shadow: 0 0 20px rgba(255,215,0,0.4);
        }

        .search-premium-container {
            max-width: 600px;
            margin: 20px auto;
            padding: 15px;
        }

        .premium-search-box {
            background: linear-gradient(145deg, #fff5f5, #ffffff);
            border-radius: 25px;
            padding: 25px;
            box-shadow: 0 8px 30px rgba(255,77,77,0.15);
            position: relative;
            overflow: hidden;
            border: 2px solid #ff4d4d;
        }

        .premium-title {
            color: #ff4d4d;
            font-size: 1.4em;
            text-align: center;
            margin: 0 0 20px 0;
            font-weight: bold;
            text-shadow: 1px 1px 2px rgba(255,77,77,0.2);
        }

        .search-wrapper {
            position: relative;
        }

        .premium-search-input {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #ffcc00;
            border-radius: 30px;
            font-size: 1em;
            margin-bottom: 15px;
            transition: all 0.3s ease;
            background: rgba(255,255,255,0.9);
            box-sizing: border-box; /* Added */
        }
        .premium-search-input:focus-visible {
            outline: 3px solid #FF8C42;
            outline-offset: 1px;
        }

        .premium-search-input:focus {
            outline: none;
            border-color: #ff4d4d;
            box-shadow: 0 0 15px rgba(255,77,77,0.2);
        }

        .premium-search-btn {
            width: 100%;
            padding: 15px;
            border: none;
            border-radius: 30px;
            background: linear-gradient(135deg, #ffcc00, #ff4d4d);
            color: white;
            font-size: 1.1em;
            font-weight: bold;
            cursor: pointer;
            position: relative;
            overflow: visible; 
            transition: all 0.3s ease;
        }
        
        .premium-search-btn .btn-glow { 
            position: absolute;
            top: 0;
            left: -100%; 
            width: 300%; 
            height: 100%;
            background: linear-gradient(
                45deg,
                transparent,
                rgba(255,255,255,0.3), 
                transparent,
                rgba(255,255,255,0.2) 
            );
            animation: glowSlide 6s infinite ease-in-out; 
        }


        .premium-search-btn::after { 
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(
                to right,
                rgba(255,255,255,0) 0%,
                rgba(255,255,255,0.2) 50%,
                rgba(255,255,255,0) 100%
            );
            animation: glowOverlay 8s infinite linear;
            border-radius: 30px; 
        }


        .sparkle-star {
            position: absolute;
            right: 20px; /* Needs context, assuming it's inside a relatively positioned parent */
            animation: starFloat 2s infinite ease-in-out; 
        }
        @keyframes starFloat {
            0%, 100% { transform: translateY(0) scale(1); opacity: 0.7; }
            50% { transform: translateY(-5px) scale(1.1); opacity: 1; }
        }

        .star-field {
            position: absolute;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        .stars {
            position: absolute;
            background: #fff;
            border-radius: 50%;
            animation: twinkle 3s infinite;
        }

        @keyframes twinkle {
            0%, 100% { opacity: 0; }
            50% { opacity: 1; }
        }

        .premium-search-btn:hover {
            transform: scale(1.02);
            box-shadow: 0 5px 20px rgba(255,77,77,0.3);
        }
        
        @keyframes glowOverlay { 
            0% { opacity: 0; }
            25% { opacity: 0.3; }
            50% { opacity: 0; }
            75% { opacity: 0.3; }
            100% { opacity: 0; }
        }


        .ultimate-help-btn {
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            border: none;
            border-radius: 30px;
            padding: 20px 40px;
            color: white;
            font-size: 1.3em;
            font-weight: 700;
            cursor: pointer;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            margin: 20px auto;
            display: block;
            box-shadow: 0 5px 15px rgba(255,77,77,0.3);
        }

        .holographic-effect {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg,
                rgba(255,255,255,0.3),
                rgba(255,255,255,0.1),
                rgba(255,255,255,0.3)
            );
            animation: hologram 3s infinite linear;
        }

        .magic-sparkles {
            position: absolute;
            right: 20px; /* Needs context */
            animation: sparkleJump 1.5s infinite; 
        }

        .help-options {
            display: grid;
            gap: 20px;
        }

        .help-option { 
            padding: 20px;
            border-radius: 15px;
            background: #fff5f5;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            border: none; 
            color: #333; 
            font-family: inherit; 
            font-size: 1em; 
        }
        .help-option .option-icon { /* Style for icons inside help options */
            font-size: 1.8em;
            margin-bottom: 10px;
            display: block; /* Ensure it takes space */
        }
        .help-option h3 {
            margin: 10px 0 5px 0;
            color: #ff4d4d;
        }
        .help-option p {
            font-size: 0.9em;
            color: #555;
        }

        .help-option:hover {
            transform: translateY(-5px);
            background: #fff0f0;
            box-shadow: 0 6px 15px rgba(255,77,77,0.2);
        }
        .help-option:focus-visible {
            outline: 3px solid #FF8C42;
            outline-offset: 2px;
            background: #fff0f0;
        }


        @keyframes hologram {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }
        
        .cat-help-container { 
            position: fixed; 
            bottom: 20px;
            right: 20px;
            background: rgba(255,255,255,0.9);
            border-radius: 50%;
            padding: 15px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
            z-index: 990; /* Below modals and chat bot icon */
        }

        .cat-help-btn {
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
        }
        .cat-help-btn:focus-visible { /* Focus for the floating help button itself */
            outline: 3px solid #FF8C42;
            border-radius: 50%;
        }

        .btn-radiate {
            width: 100%;
            height: 100%;
            background: radial-gradient(circle, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0) 70%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .cat-help-btn:hover .btn-radiate { /* Hover on button affects radiate */
            transform: scale(1.1);
        }

        .btn-content { /* No specific element found, likely illustrative */
            color: #333;
            font-size: 16px;
            margin-top: 5px;
            transition: all 0.3s ease;
        }

        .sparkle-stars { /* Needs context, likely inside cat-help-btn */
            font-size: 18px;
            margin-left: 5px;
            transition: all 0.3s ease;
        }
        
        .ultimate-help-btn .cat-icon, 
        .cat-help-btn .cat-icon { 
            width: 40px;
            height: 40px;
            animation: magicPulse 3s ease-in-out infinite;
            vertical-align: middle;
            position: relative;
        }


        .new-text-style {
            color: white !important;
            font-family: 'Roboto Condensed', sans-serif;
            letter-spacing: 1px;
            text-transform: uppercase;
            text-shadow: 0 2px 8px rgba(0, 0, 0, 0.7);
            animation: textFlow 6s linear infinite;
        }

        @keyframes magicPulse {
            0% { 
                transform: scale(1) rotate(0deg);
                filter: drop-shadow(0 0 10px rgba(255, 204, 0, 0.5));
            }
            25% {
                transform: scale(1.1) rotate(5deg);
                filter: drop-shadow(0 0 15px rgba(255, 204, 0, 0.8));
            }
            50% { 
                transform: scale(0.95) rotate(-5deg);
                filter: drop-shadow(0 0 20px rgba(255, 204, 0, 1));
            }
            75% {
                transform: scale(1.05) rotate(3deg);
                filter: drop-shadow(0 0 15px rgba(255, 204, 0, 0.7));
            }
            100% { 
                transform: scale(1) rotate(0deg);
                filter: drop-shadow(0 0 10px rgba(255, 204, 0, 0.5));
            }
        }

        @keyframes textFlow {
            0% { 
                letter-spacing: 1px;
                text-shadow: 0 2px 8px rgba(0, 0, 0, 0.7);
            }
            50% {
                letter-spacing: 1.5px;
                text-shadow: 0 4px 12px rgba(0, 0, 0, 0.9);
            }
            100% { 
                letter-spacing: 1px;
                text-shadow: 0 2px 8px rgba(0, 0, 0, 0.7);
            }
        }
        
        /* Prevenir scroll horizontal */
        html, body {
            max-width: 100%;
            overflow-x: hidden;
            position: relative; 
        }

        /* Particle Network Styles */
        .particle-network {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1; 
        }

        .particle {
            position: absolute;
            border-radius: 50%;
            background: rgba(0, 174, 240, 0.15);
            animation: particleFloat 8s infinite linear;
            filter: blur(1px);
        }

        @keyframes particleFloat {
            0% {
                transform: translateY(0) translateX(0) rotate(0deg);
                opacity: 0;
            }
            25% {
                transform: translateY(-20vh) translateX(10vw) rotate(90deg);
                opacity: 0.4;
            }
            50% {
                transform: translateY(-40vh) translateX(-10vw) rotate(180deg);
                opacity: 0.7;
            }
            75% {
                transform: translateY(-60vh) translateX(15vw) rotate(270deg);
                opacity: 0.4;
            }
            100% {
                transform: translateY(-80vh) translateX(0) rotate(360deg);
                opacity: 0;
            }
        }

        /* Desktop/Mobile Cover Image Styles */
        @keyframes shine {
            0% { transform: translateX(-100%) rotate(30deg); }
            100% { transform: translateX(100%) rotate(30deg); }
        }
        @keyframes sparkle {
            0%, 100% { opacity: 0.2; transform: scale(0.8); }
            50% { opacity: 1; transform: scale(1.2); }
        }
        
        .desktop-cover { display: block; }
        .mobile-cover { display: none; }
        
        /* Pedido Modal Improved Styles */
        #pedidoModal .modal-title { /* Specific to pedidoModal title */
            color: #ff4d4d;
            text-align: center;
            margin-bottom: 30px;
            animation: titlePulse 2s infinite;
            font-family: 'Roboto Condensed', sans-serif;
            font-size: 1.8em;
            letter-spacing: 1px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
        }

        @keyframes titlePulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .opciones-grid { /* Added wrapper for opcion-card elements */
            display: grid;
            gap: 20px;
        }

        .opcion-card { 
            position: relative;
            padding: 25px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
            overflow: hidden;
            color: white;
            box-shadow: 0 8px 20px rgba(0,0,0,0.2);
            border: none; 
            font-family: inherit;
            text-align: left; 
            display: block; /* Make it block for better layout control */
            width: 100%; /* Ensure it takes full width in grid */
        }
         .opcion-card:focus-visible {
            outline: 3px solid rgba(255,255,255,0.7);
            outline-offset: 2px;
            box-shadow: 0 12px 25px rgba(0,0,0,0.4);
        }

        .opcion-card:hover {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 0 12px 25px rgba(0,0,0,0.3);
        }
        .opcion-header { /* Wrapper for emoji and h3 */
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 10px;
        }
        .opcion-header h3 {
            margin: 0;
            font-size: 1.3em;
        }
        .opcion-desc {
            font-size: 0.95em;
            opacity: 0.9;
        }


        .emoji-container {
            font-size: 2.5em;
            filter: drop-shadow(0 0 10px rgba(0,0,0,0.2));
            animation: float 3s ease-in-out infinite; 
            transition: transform 0.3s ease;
        }

        .opcion-card:hover .emoji-container {
            transform: rotate(15deg) scale(1.1);
        }

        .tag {
            display: inline-block;
            padding: 5px 15px;
            border-radius: 15px;
            background: rgba(255,255,255,0.2);
            margin-left: 10px;
            font-size: 0.8em;
            font-weight: 600;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
        }

        .opcion-card:hover .tag {
            background: rgba(255,255,255,0.3);
            transform: translateX(5px);
        }

        .efecto-hover {
            position: absolute;
            top: 0;
            left: -100%;
            width: 200%;
            height: 100%;
            background: linear-gradient(
                45deg,
                transparent,
                rgba(255,255,255,0.3),
                transparent
            );
            animation: brillo 4s infinite;
            mix-blend-mode: overlay;
        }

        @keyframes brillo {
            0% { transform: translateX(-50%); }
            100% { transform: translateX(50%); }
        }

        .opcion-card.categoria { background: linear-gradient(145deg, #6a5acd, #483d8b); }
        .opcion-card.diseño { background: linear-gradient(145deg, #ff6b6b, #ff8e53); }
        .opcion-card.precio { background: linear-gradient(145deg, #4CAF50, #45a049); }

        /* Cart Styles */
        .cart-container { 
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000; 
        }

        .cart-toggle {
            background: rgba(255, 255, 255, 0.9);
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            cursor: pointer;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
            font-size: 1.5em; 
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .cart-toggle:focus-visible {
            outline: 3px solid #FF8C42;
            background: #fff;
        }

        .cart-toggle:hover {
            transform: scale(1.1);
            background: #fff;
        }

        .cart-content {
            position: absolute;
            top: 60px; 
            right: 0;
            background: rgba(255, 255, 255, 0.98); /* Slightly more opaque */
            border-radius: 15px;
            padding: 20px;
            width: 300px;
            transform: translateY(-20px) scale(0.95); /* Added scale for entry animation */
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s cubic-bezier(0.68, -0.55, 0.27, 1.55); /* Smoother transition */
            box-shadow: 0 8px 30px rgba(0,0,0,0.1);
            backdrop-filter: blur(5px); /* Added blur for modern feel */
        }

        .cart-container.active .cart-content {
            transform: translateY(0) scale(1);
            opacity: 1;
            visibility: visible;
        }

        .checkout-btn {
            background: #4CAF50;
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 25px;
            cursor: pointer;
            width: 100%;
            margin-top: 15px;
            font-size: 1.1em;
            transition: all 0.3s ease;
        }

        .checkout-btn:hover {
            background: #45a049;
            transform: translateY(-2px);
        }
        
        /* Peeking Cat Styles */
        .peeking-cat {
            position: fixed;
            width: 110px; /* Increased size slightly */
            height: auto; /* For aspect ratio */
            animation: peekAnimation 1.2s ease-out forwards; /* Slightly longer animation */
            z-index: 999; /* Adjusted z-index to be below modals/chat icon */
            filter: drop-shadow(0 0 8px rgba(0,0,0,0.2));
            pointer-events: none; /* Ensure cats don't block interaction */
        }

        .peeking-cat.bottom-left { bottom: -15px; left: -15px; transform: rotate(-1deg); --rotation: -1deg; }
        .peeking-cat.top-left { top: -15px; left: -15px; transform: rotate(10deg); --rotation: 10deg; }
        .peeking-cat.top-right { top: -15px; right: -15px; transform: rotate(-10deg); --rotation: -10deg; }
        .peeking-cat.bottom-right { bottom: -15px; right: -15px; transform: rotate(1deg); --rotation: 1deg; }

        @keyframes peekAnimation { /* Animation remains similar, timing adjusted above */
            0% { transform: translate(0, 0) rotate(var(--rotation)); opacity: 0; }
            20% { transform: translate(calc(var(--peekX, 0px) + 35px), calc(var(--peekY, 0px) + 35px)) rotate(var(--rotation)); opacity: 1; }
            80% { transform: translate(calc(var(--peekX, 0px) + 35px), calc(var(--peekY, 0px) + 35px)) rotate(var(--rotation)); opacity: 1; }
            100% { transform: translate(calc(var(--peekX, 0px) + 70px), calc(var(--peekY, 0px) + 70px)) rotate(var(--rotation)); opacity: 0; }
        }
        .peeking-cat.top-left { --peekX: 35px; --peekY: 35px; }
        .peeking-cat.top-right { --peekX: -35px; --peekY: 35px; }
        .peeking-cat.bottom-left { --peekX: 35px; --peekY: -35px; }
        .peeking-cat.bottom-right { --peekX: -35px; --peekY: -35px; }


        /* Chatbot Styles */
        .cat-bot-container { 
            position: fixed;
            bottom: 25px;
            right: 25px;
            z-index: 9998; 
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }
        .cat-bot-container:focus-visible { /* For keyboard focus on the container itself */
            outline: 3px solid #FF8C42;
            border-radius: 50%; /* Assuming icon is circular */
        }


        .cat-bot-icon { 
            position: relative;
            cursor: pointer;
            width: 65px;
            height: 65px;
            transition: all 0.3s ease;
            animation: bot-float 3s ease-in-out infinite;
        }

        .cat-bot-img {
            width: 100%;
            height: 100%;
            filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.2));
            transform-origin: center;
            transition: all 0.3s ease;
        }

        .cat-bot-tooltip {
            position: absolute;
            bottom: calc(100% + 15px);
            right: 50%;
            transform: translateX(50%);
            background: rgba(50, 50, 50, 0.9); /* Darker tooltip */
            color: white;
            padding: 10px 18px; /* Adjusted padding */
            border-radius: 10px; /* More standard radius */
            font-family: 'Roboto', sans-serif;
            font-size: 14px;
            font-weight: 500;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
            white-space: nowrap;
            z-index: 1; /* Ensure tooltip is above icon */
        }
        
        .cat-bot-icon:hover .cat-bot-img, .cat-bot-container:focus-within .cat-bot-img, .cat-bot-icon.active .cat-bot-img {
            transform: scale(1.1) rotate(15deg);
            filter: drop-shadow(0 4px 12px rgba(0, 0, 0, 0.3));
        }

        .cat-bot-icon:hover .cat-bot-tooltip, .cat-bot-container:focus-within .cat-bot-tooltip, .cat-bot-icon.active .cat-bot-tooltip {
            opacity: 1;
            visibility: visible;
            transform: translateX(50%) translateY(-5px);
        }

        /* Chat Window Styles */
        .chat-container { 
            position: fixed;
            bottom: 100px; 
            right: 30px;
            width: 340px;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 12px 40px rgba(0,0,0,0.2);
            backdrop-filter: blur(10px);
            transform: scale(0.8) translateY(20px) rotateX(-10deg); /* Improved initial state for animation */
            opacity: 0; /* Start hidden for animation */
            transform-origin: bottom right;
            transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55), opacity 0.3s ease-out;
            display: none; 
            z-index: 9999; 
        }
        
        .chat-container.visible { 
             transform: scale(1) translateY(0) rotateX(0deg);
             opacity: 1;
             display: flex; /* Use flex for column layout */
             flex-direction: column; /* Column layout */
             max-height: calc(100vh - 120px); /* Prevent overflow on small viewports */
        }


        .chat-header {
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            color: white;
            padding: 15px 20px;
            border-radius: 20px 20px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-shrink: 0; /* Prevent header from shrinking */
        }
        .chat-header .header-content {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .chat-header .header-content img {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            animation: bounce 2s infinite; 
        }
        .chat-header h3 {
            margin: 0;
            font-size: 1.3em;
            text-shadow: 1px 1px 3px rgba(0,0,0,0.2);
        }
        .chat-header .close-chat { 
            background: none;
            border: none;
            color: white;
            font-size: 28px;
            cursor: pointer;
            padding: 0;
            transition: transform 0.3s ease;
        }
        .chat-header .close-chat:hover {
             transform: rotate(90deg) scale(1.2);
        }
         .chat-header .close-chat:focus-visible {
            outline: 2px solid rgba(255,255,255,0.7);
            border-radius: 50%;
        }


        .chat-messages {
            flex-grow: 1; /* Allow messages to take available space */
            max-height: 320px; /* Original max-height, adjust if needed with flex */
            padding: 20px;
            overflow-y: auto;
            background: #f8f9fa;
            /* border-radius: 0 0 10px 10px; Removed, as suggestions are now part of chat-input-area */
        }
        .chat-messages .bot-message, .chat-messages .user-message {
            display: flex;
            margin: 15px 0;
            animation: slideInMsg 0.3s ease-out;
            max-width: 85%; /* Prevent messages from being too wide */
            word-wrap: break-word; /* Ensure long words break */
        }
        .chat-messages .bot-message {
            align-items: flex-start;
            gap: 10px;
        }
        .chat-messages .bot-message img {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            flex-shrink: 0;
        }
        .chat-messages .bot-message p {
            background: white;
            padding: 12px 18px;
            border-radius: 0 15px 15px 15px; /* "Speech bubble" pointing left */
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            /* max-width: 70%; Removed, handled by parent */
            color: #333; /* Ensure text color */
        }
        .chat-messages .user-message {
            justify-content: flex-end;
            margin-left: auto; /* Push user messages to the right */
        }
         .chat-messages .user-message p {
            background: #e3f2fd; 
            padding: 12px 18px;
            border-radius: 15px 0 15px 15px; /* "Speech bubble" pointing right */
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            /* max-width: 70%; Removed, handled by parent */
            color: #333; /* Ensure text color */
        }
        .chat-messages .bot-typing-indicator {
            font-style: italic;
            color: #777;
            padding: 5px 0;
            font-size: 0.9em;
        }
        .chat-messages .bot-typing-indicator span {
            animation: typingDots 1.5s infinite;
            opacity: 0;
        }
        .chat-messages .bot-typing-indicator span:nth-child(1) { animation-delay: 0s; }
        .chat-messages .bot-typing-indicator span:nth-child(2) { animation-delay: 0.2s; }
        .chat-messages .bot-typing-indicator span:nth-child(3) { animation-delay: 0.4s; }
        @keyframes typingDots {
            0%, 100% { opacity: 0; }
            50% { opacity: 1; }
        }

        .chat-input-area { /* New container for input and suggestions */
            padding: 15px;
            border-top: 1px solid #eee;
            background: rgba(255, 255, 255, 0.98); /* Match chat-container bg */
            border-radius: 0 0 20px 20px; /* Round bottom corners */
            flex-shrink: 0; /* Prevent input area from shrinking */
        }
        .chat-input {
            display: flex;
            align-items: center; /* Align input and button */
            /* padding: 15px; (moved to chat-input-area) */
            /* border-top: 1px solid #eee; (moved to chat-input-area) */
            /* background: rgba(255, 255, 255, 0.95); (moved to chat-input-area) */
        }
        .chat-input input {
            flex: 1;
            padding: 12px 18px;
            border: 2px solid #ddd;
            border-radius: 25px;
            margin-right: 10px;
            transition: border-color 0.3s ease;
            font-size: 1em; /* Ensure consistent font size */
        }
        .chat-input input:focus {
            border-color: #ff4d4d;
            outline: none;
        }
        .chat-input button { 
            background: #ff4d4d;
            color: white;
            border: none;
            width: 45px;
            height: 45px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            font-size: 1.2em; 
            flex-shrink: 0; /* Prevent button from shrinking */
        }
        .chat-input button:hover {
            background: #ff5252;
            transform: scale(1.1);
            box-shadow: 0 5px 15px rgba(255,77,77,0.3);
        }
        .chat-input button:focus-visible {
            outline: 2px solid #FF8C42;
            background: #ff5252;
        }

        .chat-suggestions {
            /* padding: 10px 15px; (Padding handled by chat-input-area) */
            padding-top: 10px; /* Space above suggestions */
            display: flex;
            gap: 8px; /* Slightly reduced gap */
            flex-wrap: wrap;
            /* background: rgba(255, 255, 255, 0.95); (Handled by chat-input-area) */
            /* border-top: 1px solid #eee; (Handled by chat-input-area) */
            /* border-radius: 0 0 20px 20px; (Handled by chat-input-area) */
        }
        .chat-suggestions button { 
            background: linear-gradient(135deg, #ff9999, #ff4d4d);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9em;
        }
        .chat-suggestions button:hover {
            transform: translateY(-2px);
            box-shadow: 0 3px 10px rgba(255,77,77,0.2);
        }
         .chat-suggestions button:focus-visible {
            outline: 2px solid #FF8C42;
            transform: translateY(-1px);
        }
        
        @keyframes bot-float { 0% { transform: translateY(0px); } 50% { transform: translateY(-8px); } 100% { transform: translateY(0px); } }
        @keyframes slideInMsg { 0% { transform: translateX(-20px); opacity: 0; } 100% { transform: translateX(0); opacity: 1; } }

        /* Loading Indicator Styles */
        #loading-indicator {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 10002; /* Above notifications */
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }
        #loading-indicator.visible {
            opacity: 1;
            visibility: visible;
        }
        .loader-cat {
            width: 80px;
            height: 80px;
            background-image: url('https://cdn-icons-png.flaticon.com/512/763/763709.png'); /* Cute cat icon */
            background-size: contain;
            background-repeat: no-repeat;
            animation: spinAndPurr 1.5s linear infinite;
        }
        @keyframes spinAndPurr {
            0% { transform: rotate(0deg) scale(1); }
            50% { transform: rotate(180deg) scale(1.1); }
            100% { transform: rotate(360deg) scale(1); }
        }

        /* Back to Top Button Styles */
        #back-to-top-btn {
            position: fixed;
            bottom: 20px;
            right: -70px; /* Start off-screen */
            width: 50px;
            height: 50px;
            background-color: #ff4d4d;
            color: white;
            border: none;
            border-radius: 50%;
            font-size: 24px;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(0,0,0,0.2);
            transition: right 0.3s ease, transform 0.3s ease, background-color 0.3s ease;
            z-index: 990; /* Below modals and chat */
            display: flex;
            justify-content: center;
            align-items: center;
        }
        #back-to-top-btn.visible {
            right: 20px;
        }
        #back-to-top-btn:hover {
            background-color: #e63c3c;
            transform: scale(1.1);
        }
         #back-to-top-btn:focus-visible {
            outline: 3px solid #FF8C42;
            background-color: #e63c3c;
        }
        #back-to-top-btn .paw-icon { /* Simple SVG Paw */
            width: 24px;
            height: 24px;
            fill: white;
            transform: rotate(-90deg); /* Point upwards */
        }
        
        /* Prefers Reduced Motion */
        @media (prefers-reduced-motion: reduce) {
          *, *::before, *::after {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
            scroll-behavior: auto !important;
          }
          .hero-section::before, .cat-wave, .cat-paw, .cat-paws, .floating-cat, .walking-paws, .cat-silhouette,
          .paw-prints, .purr-button .cat-icon, .typing-effect::after, .quantum-cat-container, .meow-button::before,
          .quantum-particle, .banner-cat-icon, .holographic-effect, .magic-sparkles, .particle, .shine, .sparkle,
          .titlePulse, .emoji-container, .efecto-hover, .bot-float, .spinAndPurr, #back-to-top-btn,
          .peeking-cat {
            animation: none !important;
            transition: none !important;
          }
          .hero-section { animation: fadeIn 0.01s !important; } /* Keep initial fade-in minimal */
          .cat-bot-icon:hover .cat-bot-img, .cat-bot-container:focus-within .cat-bot-img, .cat-bot-icon.active .cat-bot-img {
            transform: scale(1.05); /* Simpler hover for bot */
          }
           .chat-container.visible {
             transition: opacity 0.01s; /* Faster chat open/close */
           }
        }


        /* Responsive Styles */
        @media (max-width: 768px) {
            .hero-section h1 { font-size: 32px; }
            .hero-section p { font-size: 18px; }
            .buttons { flex-direction: column; gap: 15px; }
            .cat-search-container { margin: 20px 15px; padding: 20px; }
            .meow-input { font-size: 16px; padding: 18px 25px; }
            .purr-button { padding: 18px; }
            .purr-button .cat-icon { font-size: 22px; }
            .paw-prints { opacity: 0.2; }
            .quantum-cat-input, .meow-button { font-size: 14px; }
            .categories-grid { grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 15px; } /* Slightly larger minmax */
            .banner-title { font-size: 2rem; }
            .category-select { font-size: 14px; padding: 12px 20px; background-size: 16px; }
            .dynamic-category-selector { margin: 15px; padding: 12px; }
            .selector-title { font-size: 18px; }
            .premium-category-select { padding: 15px 20px; font-size: 14px; }
            .cloud-content h3 { font-size: 1.6em; }
            .cloud-buttons { grid-template-columns: 1fr; }
            .modal-content, .cat-modal .modal-content { padding: 20px; width: 90%; } /* General modal content on mobile */
            .tiktok-modal .modal-content { width: 90%; max-width: 360px; padding: 10px; } /* TikTok modal content on mobile */
            .tiktok-embed iframe { min-height: 500px; } /* Adjust TikTok iframe height */
            .opcion-card { padding: 20px; margin: 10px 0; box-shadow: 0 5px 15px rgba(0,0,0,0.2); }
            .emoji-container { font-size: 2em; }
            #pedidoModal .modal-title { font-size: 1.5em; margin-bottom: 20px; }
            .cat-bot-container { bottom: 15px; right: 15px; }
            .cat-bot-icon { width: 55px; height: 55px; }
            .chat-container { width: calc(100% - 30px); right: 15px; bottom: 80px; max-height: calc(100vh - 100px); } /* Adjust chat window for mobile */
            .chat-messages { max-height: 280px; /* Allow more space on mobile */ }
            .chat-header h3 { font-size: 1.1em; }
            #back-to-top-btn { width: 45px; height: 45px; font-size: 20px; }
        }

        @media (max-width: 480px) {
            .hero-section { padding: 30px 15px; border-radius: 0; }
            .hero-section h1 { font-size: 28px; flex-direction: column; gap: 8px; }
            .cat-wave { width: 50px; height: 50px; } 
            button { width: auto; max-width: 100%; padding: 14px 20px; font-size: 14px; } /* General button on small mobile */
            .buttons button { width: 100%; } /* Ensure hero buttons take full width */
            /* .search-bar styles were removed */
            .desktop-cover { display: none !important; }
            .mobile-cover { display: block !important; }
            .cat-search-container { margin: 15px !important; padding: 15px !important; border-radius: 12px !important; }
            .meow-input { font-size: 16px !important; padding: 16px 20px !important; border-radius: 10px !important; }
            .purr-button { padding: 18px 25px !important; font-size: 16px !important; border-radius: 10px !important; }
            .purr-button .cat-icon { width: 30px; height: 30px; font-size: 22px !important; } /* Adjusted cat icon size */
            .typing-effect::after { right: 15px; font-size: 1.1em; } /* Adjusted typing cursor */
            .paw-prints { background-size: 15px; }
            .quantum-cat-input { padding: 16px 20px; font-size: 14px; }
            .meow-button { padding: 16px 25px; font-size: 14px; }
            .meow-button .cat-icon { font-size: 20px; } 
            .quantum-particle { display: none; } 
            .meow-content, .cat-modal .modal-content { padding: 1.5rem; max-width: calc(100% - 20px); border-radius: 10px; } /* Full width modals with padding */
            .categories-grid { grid-template-columns: 1fr; gap: 15px; } 
            .category-card { padding: 20px; }
            .banner-cat-icon { width: 80px; height: 80px; }
            .category-select { font-size: 13px; padding: 10px 15px; }
            .selector-header { flex-direction: column; text-align: center; }
            .dynamic-category-selector .cat-icon { width: 40px; height: 40px; }
            .premium-category-select option { font-size: 13px; padding: 12px; }
            .premium-search-box { padding: 20px; border-radius: 20px; }
            .premium-title { font-size: 1.2em; }
            .premium-search-btn { font-size: 1em; padding: 12px; }
            .ultimate-help-btn { font-size: 1.1em; padding: 15px 30px; }
            .chat-container { width: calc(100% - 20px); right: 10px; bottom: 75px; }
            .chat-messages { padding: 15px; }
            .chat-input-area { padding: 10px; }
            .chat-input input { padding: 10px 15px; font-size: 0.95em; }
            .chat-input button { width: 40px; height: 40px; font-size: 1.1em; }
            .chat-suggestions button { font-size: 0.85em; padding: 6px 12px; }
        }

    </style>
    <script>
    // Store the element that triggered a modal
    let modalTriggerElement = null;

    // Función universal para abrir modales
    function showModal(modalId, triggerElement = null) {
        const modal = document.getElementById(modalId);
        if (!modal) return;

        modalTriggerElement = triggerElement || document.activeElement; // Store the triggering element or current focused

        modal.style.display = modal.classList.contains('cat-modal') || modal.classList.contains('survey-modal') || modal.classList.contains('tiktok-modal') ? 'flex' : 'block'; // Use flex for modals that use it for centering
        
        document.documentElement.style.overflow = 'hidden';
        document.body.style.overflow = 'hidden';
        document.body.style.position = 'fixed'; 
        document.body.style.width = '100%';

        // Focus trapping
        const focusableElements = modal.querySelectorAll(
            'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'
        );
        const firstFocusableElement = focusableElements[0];
        const lastFocusableElement = focusableElements[focusableElements.length - 1];

        if (firstFocusableElement) {
            firstFocusableElement.focus();
        }

        modal.addEventListener('keydown', function(e) {
            if (e.key === 'Tab' || e.keyCode === 9) {
                if (e.shiftKey) { // Shift + Tab
                    if (document.activeElement === firstFocusableElement) {
                        lastFocusableElement.focus();
                        e.preventDefault();
                    }
                } else { // Tab
                    if (document.activeElement === lastFocusableElement) {
                        firstFocusableElement.focus();
                        e.preventDefault();
                    }
                }
            }
            if (e.key === 'Escape' || e.keyCode === 27) {
                closeModal(modalId);
            }
        });
    }

    // Función universal para cerrar modales
    function closeModal(modalId) {
        const modal = document.getElementById(modalId);
        if (!modal) return;
        modal.style.display = 'none';
        
        document.documentElement.style.overflow = '';
        document.body.style.overflow = '';
        document.body.style.position = '';
        document.body.style.width = '';
        
        if (modalTriggerElement) {
            modalTriggerElement.focus();
            modalTriggerElement = null; // Reset for next modal
        }
    }

    // Non-blocking notification system
    function showAppNotification(message, type = 'info') {
        const notificationArea = document.getElementById('app-notifications');
        if (!notificationArea) {
            console.warn('Notification area not found');
            alert(message); 
            return;
        }

        const notification = document.createElement('div');
        notification.className = `app-notification app-notification-${type}`;
        notification.textContent = message;
        notification.setAttribute('role', 'alert'); // For screen readers
        
        notification.style.padding = '12px 20px';
        notification.style.borderRadius = '8px';
        notification.style.color = '#fff';
        notification.style.boxShadow = '0 4px 15px rgba(0,0,0,0.2)';
        notification.style.opacity = '0';
        notification.style.transition = 'opacity 0.5s ease, transform 0.5s ease, margin-top 0.3s ease';
        notification.style.transform = 'translateX(100%)';
        notification.style.marginTop = '10px'; // Will be handled by gap in flex container
        notification.style.width = 'auto';
        notification.style.maxWidth = '300px';
        notification.style.cursor = 'pointer';

        if (type === 'error') {
            notification.style.backgroundColor = '#d9534f';
        } else if (type === 'success') {
            notification.style.backgroundColor = '#5cb85c';
        } else { 
            notification.style.backgroundColor = '#5bc0de';
        }

        notification.onclick = () => {
            notification.style.opacity = '0';
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => notification.remove(), 500);
        };
        
        notificationArea.insertBefore(notification, notificationArea.firstChild);

        requestAnimationFrame(() => {
            notification.style.opacity = '1';
            notification.style.transform = 'translateX(0)';
        });

        setTimeout(() => {
            notification.style.opacity = '0';
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 500);
        }, 4000); 
    }

    // Loading indicator functions
    const loadingIndicator = document.createElement('div');
    loadingIndicator.id = 'loading-indicator';
    loadingIndicator.innerHTML = '<div class="loader-cat"></div>';
    document.body.appendChild(loadingIndicator);

    function showLoading() {
        loadingIndicator.classList.add('visible');
    }
    function hideLoading() {
        loadingIndicator.classList.remove('visible');
    }

    </script>
</head>
<body>
    <div class="particle-network"></div>
    <div id="app-notifications" aria-live="polite" style="position: fixed; top: 20px; right: 20px; z-index: 10001; display: flex; flex-direction: column; align-items: flex-end; gap: 10px;"></div>

    <main id="main-content">
        <div class="hero-section" id="heroSection">
            <div class="cat-details paw1 cat-paw"></div>
            <div class="cat-details paw2 cat-paw"></div>
            <div class="cat-details paw3 cat-paw"></div>
            <div class="cat-details paw4 cat-paw"></div>
            <div class="cat-details whisker1 cat-whiskers"></div>
            <div class="cat-details whisker2 cat-whiskers"></div>
            <h1><span class="cat-wave"></span>Bienvenido a Balatin</h1>
            <p>Tu asistente de compras felinamente inteligente.</p>
            <div class="message">Encuentra las mejores ofertas y productos con un toque de magia gatuna.</div>
            <div class="buttons">
                <button id="heroSurveyBtn">Ver Recomendaciones 🐾</button>
                <button id="heroCloseBtn" class="close-btn">Ocultar Saludo 👋</button>
            </div>
        </div>

        <!-- Cat Search Container (Main search bar) -->
        <div class="cat-search-container">
            <div class="input-container typing-effect">
                 <input type="search" id="catSearch" class="meow-input" placeholder="¿Qué necesita tu humano hoy? Ej: juguetes" aria-label="Buscar productos">
            </div>
            <button class="purr-button" id="startSearchBtn"> <!-- Added ID for easier JS hook -->
                <span class="cat-icon">Gato</span> <!-- Changed text for screen reader -->
                Buscar con Ronroneo
                <div class="button-glow"></div>
            </button>
        </div>


        <!-- Desktop Cover Image Container - Only visible on desktop -->
        <div class="desktop-cover" style="width: 90%; max-width: 800px; margin: 30px auto; position: relative; border-radius: 20px; overflow: hidden; box-shadow: 0 15px 35px rgba(0,0,0,0.4); animation: pulse 3s infinite ease-in-out;">
            <div style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(135deg, var(--primary-color), var(--accent-color)); z-index: 1;"></div>
            <div style="position: absolute; top: -50%; left: -50%; width: 200%; height: 200%; background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent); transform: rotate(30deg); animation: shine 3s infinite linear; z-index: 2;"></div>
            <div style="position: absolute; top: 20px; right: 20px; width: 30px; height: 30px; background: rgba(255,255,255,0.8); border-radius: 50%; animation: sparkle 2s infinite; z-index: 3;"></div>
            <div style="position: absolute; bottom: 25px; left: 25px; width: 25px; height: 25px; background: rgba(255,255,255,0.8); border-radius: 50%; animation: sparkle 2s infinite 0.3s; z-index: 3;"></div>
            <div style="position: relative; z-index: 2; padding: 15px;">
                <img src="https://jumpseller.s3.eu-west-1.amazonaws.com/store/don-balato-mayorista/assets/ChatGPT%20Image%2015%20abr%202025%2C%2009_13_46.png?1744730053" alt="Ofertas destacadas de Don Balato Mayorista en computadoras y accesorios." style="width: 100%; height: auto; display: block; border-radius: 15px; animation: float 6s infinite ease-in-out; box-shadow: 0 5px 15px rgba(0,0,0,0.2);">
            </div>
        </div>

        <!-- Mobile Cover Image Container - Without background -->
        <div class="mobile-cover" style="width: 90%; margin: 20px auto; position: relative; border-radius: 20px; overflow: hidden; animation: pulse 3s infinite ease-in-out;">
            <div style="position: absolute; top: 10px; right: 10px; width: 20px; height: 20px; background: rgba(255,255,255,0.8); border-radius: 50%; animation: sparkle 2s infinite; z-index: 3;"></div>
            <div style="position: absolute; bottom: 15px; left: 15px; width: 15px; height: 15px; background: rgba(255,255,255,0.8); border-radius: 50%; animation: sparkle 2s infinite 0.3s; z-index: 3;"></div>
            <div style="position: relative; z-index: 2;">
                <img src="https://cloud.appwrite.io/v1/storage/buckets/67f15f1e001a58cce956/files/67fe54e3002dcb1e5a6d/view?project=67e2e148002485b3bc0b&mode=admin" alt="Ofertas móviles de Don Balato Mayorista en dispositivos electrónicos." style="width: 100%; height: auto; display: block; border-radius: 12px; animation: float 6s infinite ease-in-out; box-shadow: 0 8px 25px rgba(0,0,0,0.3);">
            </div>
        </div>
        
        <div class="categories-banner">
            <div class="banner-content">
                <div class="banner-header">
                    <img src="https://cdn-icons-png.flaticon.com/512/763/763704.png" class="banner-cat-icon" alt="Ícono de gato explorando categorías. Haz clic para una sorpresa.">
                </div>
                
                <div class="categories-grid">
                    <a href="#" class="category-card" onclick="showModal('tiktokModal', this); return false;">
                        <div class="card-icon">
                            <img src="https://cdn-icons-png.flaticon.com/512/7341/7341809.png" alt="Icono de TikTok" style="width: 50px; height: 50px;">
                        </div>
                        <h3>Tutorial de Pedidos</h3>
                        <p>¡Aprende a comprar como pro!</p>
                    </a>
                    
                    <a href="https://donbalatomayorista.cl/datos-para-transferencias" class="category-card" target="_blank" rel="noopener noreferrer">
                        <div class="card-icon">
                            <img src="https://cdn-icons-png.flaticon.com/512/4314/4314231.png" alt="Icono de transferencia bancaria" style="width: 50px; height: 50px;">
                        </div>
                        <h3>Datos para la transferencia</h3>
                        <p>Información para tus transacciones</p>
                    </a>
                </div>
            </div>
        </div>
        
        <section class="featured-products">
            {{ index_for_components }}
        </section>
        <section class="bottom-content">
            {{ index_for_bottom_components }}
        </section>
    </main>

    <!-- Modals -->
    <div id="surveyModal" class="survey-modal" role="dialog" aria-modal="true" aria-labelledby="surveyTitle">
        <div class="survey-container meow-content"> 
            <button type="button" class="close-modal" onclick="closeModal('surveyModal')" aria-label="Cerrar encuesta">&times;</button>
            <div id="step1">
                <h2 id="surveyTitle">¿Qué tipo de productos buscas?</h2>
                <div class="options">
                    <button type="button" class="option-btn" onclick="selectOption('Juguetes')">Juguetes</button>
                    <button type="button" class="option-btn" onclick="selectOption('Hogar')">Hogar</button>
                    <button type="button" class="option-btn" onclick="selectOption('Electrónicos')">Electrónicos</button>
                </div>
            </div>
            <div id="step2" style="display: none;">
                <h2>¿Alguna preferencia de marca?</h2>
                <div class="options">
                    <button type="button" class="option-btn" onclick="selectOption('Marca A')">Marca A</button>
                    <button type="button" class="option-btn" onclick="selectOption('Marca B')">Marca B</button>
                    <button type="button" class="option-btn" onclick="selectOption('Sin Preferencia')">Sin Preferencia</button>
                </div>
            </div>
            <button type="button" id="closeSurvey" class="close-btn" style="margin-top: 20px;">Cerrar Encuesta</button>
        </div>
    </div>

    <div id="helpModal" class="cat-modal" role="dialog" aria-modal="true" aria-labelledby="helpModalTitle">
        <div class="modal-content">
            <button type="button" class="close-modal" onclick="closeModal('helpModal')" aria-label="Cerrar opciones de ayuda">&times;</button>
            <h2 id="helpModalTitle" class="modal-title" style="color: #333;">¿Cómo quieres ver los productos?</h2>
            <div class="help-options">
                <button type="button" class="help-option" onclick="filterByCategory()">
                    <div class="option-icon" aria-hidden="true">📦</div>
                    <h3>Ver por Categorías</h3>
                    <p>Organizado por tipo de producto</p>
                </button>
                <button type="button" class="help-option" onclick="filterByDesign()">
                    <div class="option-icon" aria-hidden="true">🎨</div>
                    <h3>Ver por Diseño</h3>
                    <p>Los productos más estilizados</p>
                </button>
                <button type="button" class="help-option" onclick="filterByPrice()">
                    <div class="option-icon" aria-hidden="true">💲</div>
                    <h3>Ver por Precio</h3>
                    <p>Encuentra las mejores ofertas</p>
                </button>
            </div>
        </div>
    </div>

    <div id="pedidoModal" class="cat-modal" role="dialog" aria-modal="true" aria-labelledby="pedidoModalTitle">
        <div class="modal-content">
            <button type="button" class="close-modal" onclick="closeModal('pedidoModal')" aria-label="Cerrar opciones de pedido">&times;</button>
            <h2 id="pedidoModalTitle" class="modal-title">¿QUIERES QUE TE MUESTRE LOS PRODUCTOS POR?</h2>
            <div class="opciones-grid">
                <button type="button" class="opcion-card categoria" onclick="filtrar('categoria')">
                    <div class="opcion-header">
                        <div class="emoji-container" aria-hidden="true">📦</div>
                        <h3>CATEGORIA? <span class="tag">(BUENO)</span></h3>
                    </div>
                    <p class="opcion-desc">Organizados por tipo y uso</p>
                    <div class="efecto-hover"></div>
                </button>
                <button type="button" class="opcion-card diseño" onclick="filtrar('diseño')">
                    <div class="opcion-header">
                        <div class="emoji-container" aria-hidden="true">🎨</div>
                        <h3>DISEÑO? <span class="tag">(BONITO)</span></h3>
                    </div>
                    <p class="opcion-desc">Lo más estético y moderno</p>
                    <div class="efecto-hover"></div>
                </button>
                <button type="button" class="opcion-card precio" onclick="filtrar('precio')">
                    <div class="opcion-header">
                        <div class="emoji-container" aria-hidden="true">💰</div>
                        <h3>PRECIO? <span class="tag">(BARATO)</span></h3>
                    </div>
                    <p class="opcion-desc">Las mejores ofertas</p>
                    <div class="efecto-hover"></div>
                </button>
            </div>
        </div>
    </div>
    
    <div id="tiktokModal" class="tiktok-modal" role="dialog" aria-modal="true" aria-labelledby="tiktokModalTitle">
        <div class="modal-content">
            <button type="button" class="close-modal" onclick="closeModal('tiktokModal')" aria-label="Cerrar video de TikTok">&times;</button>
            <h3 id="tiktokModalTitle" class="visually-hidden">Video Tutorial de Pedidos en TikTok</h3> <!-- Hidden title for ARIA -->
            <div class="tiktok-container">
                <blockquote class="tiktok-embed" 
                    cite="https://www.tiktok.com/@vladilopez07/video/7450447470313688325" 
                    data-video-id="7450447470313688325" 
                    style="max-width: 605px; min-width: 325px;">
                    <section>
                        <a target="_blank" title="Video de vladilopez07 en TikTok" href="https://www.tiktok.com/@vladilopez07/video/7450447470313688325?refer=embed">Video de @vladilopez07</a>
                        <!-- Simplified content for brevity, original tags were hashtags -->
                    </section>
                </blockquote>
            </div>
        </div>
    </div>

    <!-- Floating Cart -->
    <div class="cart-container" id="header-cart">
        <button type="button" class="cart-toggle" id="header-cart-menu" aria-label="Abrir carrito de compras" aria-haspopup="true" aria-expanded="false">🛒</button>
        <div class="cart-content" role="region" aria-labelledby="cartTitle">
            <h4 id="cartTitle" class="visually-hidden">Contenido del Carrito</h4>
            <p>Tu carrito está vacío. ¡Miau!</p>
            <!-- Cart items would go here -->
            <button type="button" class="checkout-btn">Ir a Pagar</button>
        </div>
    </div>

    <!-- CAT BOT Icon Trigger -->
    <div class="cat-bot-container" role="button" tabindex="0" aria-label="Abrir chat con Balatin" aria-haspopup="dialog">
        <div class="cat-bot-icon">
            <img src="https://cdn-icons-png.flaticon.com/512/763/763703.png" alt="CAT BOT Balatin, tu asistente virtual." class="cat-bot-img">
            <span class="cat-bot-tooltip">¡Hola! Soy Balatin 😸</span>
        </div>
    </div>

    <!-- Chatbot Window -->
    <div class="chatbot-wrapper">
        <div class="chat-container" id="chatBot" role="dialog" aria-modal="true" aria-labelledby="chatBotHeader">
            <div class="chat-header">
                <div class="header-content">
                    <img src="https://cdn-icons-png.flaticon.com/512/763/763703.png" alt="Balatin, asistente virtual" style="width: 35px; height: 35px; border-radius: 50%; animation: bounce 2s infinite;">
                    <h3 id="chatBotHeader">BALATIN</h3>
                </div>
                <button type="button" class="close-chat" aria-label="Cerrar chat">×</button>
            </div>
            <div class="chat-messages" id="chatMessages" tabindex="0" aria-live="polite">
                <div class="bot-message">
                    <img src="https://cdn-icons-png.flaticon.com/512/763/763703.png" alt="Avatar de Balatin" style="width: 30px; height: 30px; border-radius: 50%; flex-shrink: 0;">
                    <p>¡Hola! Soy Balatin, tu asistente gatuno. ¿En qué te ayudo hoy? 😸</p>
                </div>
                <!-- Typing indicator will be added here by JS -->
            </div>
            <div class="chat-input-area">
                <div class="chat-input">
                    <input type="text" id="userInput" placeholder="Escribe aquí..." aria-label="Escribe tu mensaje">
                    <button type="button" id="sendChatBtn" aria-label="Enviar mensaje">✈️</button>
                </div>
                <div class="chat-suggestions">
                    <button type="button" class="suggestion-btn" data-suggestion="¿Qué productos tienes?">Productos</button>
                    <button type="button" class="suggestion-btn" data-suggestion="¿Cómo hago un pedido?">Pedidos</button>
                    <button type="button" class="suggestion-btn" data-suggestion="Ofertas del día">Ofertas</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Back to Top Button -->
    <button id="back-to-top-btn" aria-label="Volver arriba">
        <svg class="paw-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M5.293 9.293L12 16l6.707-6.707c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0L12 13.172 6.707 7.879c-.39-.39-1.023-.39-1.414 0s-.39 1.023 0 1.414z"/></svg>
    </button>

    <!-- Visually Hidden Class for ARIA -->
    <style>.visually-hidden { position: absolute; width: 1px; height: 1px; margin: -1px; padding: 0; overflow: hidden; clip: rect(0, 0, 0, 0); border: 0; }</style>


    <script>
    document.addEventListener('DOMContentLoaded', () => {
        // Particle generation script 
        function crearParticulasEnContenedor(selector, particleClass, count = 50, baseSize = 2, sizeRandom = 6, animDurationBase = 5, animDurationRandom = 5) {
            const contenedor = document.querySelector(selector);
            if (!contenedor) return;
            
            // Clear existing only if specifically needed, usually append is fine
            // contenedor.innerHTML = ''; 

            for(let i = 0; i < count; i++) {
                const particula = document.createElement('div');
                particula.className = particleClass;
                
                const size = Math.random() * sizeRandom + baseSize;
                particula.style.width = `${size}px`;
                particula.style.height = `${size}px`;
                
                particula.style.left = `${Math.random() * 100}%`;
                particula.style.top = `${Math.random() * 100}%`;
                
                particula.style.animationDelay = `${Math.random() * 2}s`; 
                particula.style.animationDuration = `${Math.random() * animDurationRandom + animDurationBase}s`;
                
                contenedor.appendChild(particula);
            }
        }
        crearParticulasEnContenedor('.particle-network', 'particle');
        // Example for quantum particles if .neo-meowlogram is present
        if (document.querySelector('.neo-meowlogram')) {
            crearParticulasEnContenedor('.neo-meowlogram', 'quantum-particle', 12, 4, 2, 1, 1); 
        }
        // Debounced resize function
        let resizeTimeout;
        window.addEventListener('resize', () => {
            clearTimeout(resizeTimeout);
            resizeTimeout = setTimeout(() => {
                 const particleNetwork = document.querySelector('.particle-network');
                 if (particleNetwork) {
                    particleNetwork.innerHTML = '';
                    crearParticulasEnContenedor('.particle-network', 'particle');
                 }
                 const neoMeowlogram = document.querySelector('.neo-meowlogram');
                 if (neoMeowlogram) {
                    neoMeowlogram.querySelectorAll('.quantum-particle').forEach(p => p.remove());
                    crearParticulasEnContenedor('.neo-meowlogram', 'quantum-particle', 12, 4, 2, 1, 1);
                 }
            }, 250); // Adjust debounce delay as needed
        });

        // Survey Logic
        let currentSurveyStep = 1; // Changed from selectedOption to manage steps
        const heroSurveyBtn = document.getElementById('heroSurveyBtn');
        const closeSurveyBtn = document.getElementById('closeSurvey');

        if (heroSurveyBtn) {
            heroSurveyBtn.addEventListener('click', (e) => showModal('surveyModal', e.currentTarget));
        }
        if (closeSurveyBtn) {
            closeSurveyBtn.addEventListener('click', () => {
                closeModal('surveyModal');
                resetSurvey();
            });
        }
        window.selectOption = function(option) { 
            showAppNotification(`Has seleccionado: ${option}`);
            if (currentSurveyStep === 1) {
                showNextStep();
                currentSurveyStep = 2;
            } else {
                // Final step logic (e.g., submit survey or show results)
                showAppNotification(`Encuesta completada. Preferencias guardadas.`, 'success');
                closeModal('surveyModal');
                resetSurvey();
            }
        }
        function showNextStep() {
            const step1 = document.getElementById('step1');
            const step2 = document.getElementById('step2');
            if(step1) step1.style.display = 'none';
            if(step2) {
                 step2.style.display = 'block';
                 // Focus first interactive element in step 2
                 const firstFocusableInStep2 = step2.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
                 if (firstFocusableInStep2) firstFocusableInStep2.focus();
            }
        }
        function resetSurvey() {
            currentSurveyStep = 1;
            const step1 = document.getElementById('step1');
            const step2 = document.getElementById('step2');
            if(step1) step1.style.display = 'block';
            if(step2) step2.style.display = 'none';
        }

        // Hero close button logic
        window.toggleBanner = function(action) { 
            const heroSection = document.getElementById('heroSection');
            if (action === 'close' && heroSection) {
                heroSection.style.animation = 'curtainCloseEffect 0.5s forwards';
                setTimeout(() => {
                     if (heroSection) heroSection.style.display = 'none';
                     const catSearchContainer = document.querySelector('.cat-search-container');
                     if (catSearchContainer) catSearchContainer.style.marginTop = '20px'; // Adjust margin if hero is gone
                }, 500);
            } else if (action === 'recommend') {
                showAppNotification('¡Gracias por tu interés! Pronto tendremos recomendaciones personalizadas.', 'info');
                showModal('surveyModal', document.getElementById('heroSurveyBtn')); // Open survey modal
            }
        }
        const heroCloseButton = document.getElementById('heroCloseBtn'); 
        if(heroCloseButton) heroCloseButton.addEventListener('click', () => toggleBanner('close'));
        if(heroSurveyBtn) heroSurveyBtn.addEventListener('click', () => toggleBanner('recommend')); // Re-hooked to new hero button


        // Cat Search Logic
        const startSearchButton = document.getElementById('startSearchBtn');
        if (startSearchButton) {
            startSearchButton.addEventListener('click', function() {
                const queryInput = document.getElementById('catSearch');
                if (!queryInput) return;
                const query = queryInput.value.trim();
                const catSearchContainer = document.querySelector('.cat-search-container');

                if (query) {
                    showLoading(); // Show loading indicator
                    const meow = new Audio('https://v1.cdnpk.net/videvo_files/audio/premium/audio0060/watermarked/CatMeow%20PE530413_preview.mp3');
                    meow.volume = 0.3; 
                    
                    meow.play().catch(error => {
                        console.warn("Audio play failed:", error);
                        // Fallback animation if needed (e.g., on .purr-button .cat-icon)
                    });
        
                    setTimeout(() => {
                        window.location.href = `https://www.donbalatomayorista.cl/search?q=${encodeURIComponent(query)}`;
                        // hideLoading() would typically be on the new page load or if it's an SPA
                    }, 800); // Increased delay to allow loading indicator to show
                } else {
                    if (catSearchContainer) {
                        catSearchContainer.style.animation = 'noSearchShake 0.5s';
                        setTimeout(() => catSearchContainer.style.animation = '', 500);
                    }
                    showAppNotification('Por favor, escribe algo para buscar 喵!', 'error');
                }
            });
        }
        
        // Main search input keypress (Enter to search)
        const catSearchInput = document.getElementById('catSearch');
        if (catSearchInput) {
            catSearchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    if (startSearchButton) startSearchButton.click();
                }
            });
             // Placeholder animation logic (existing)
            const categoriasPlaceholder = ['escolar', 'electrónicos', 'juguetes', 'hogar', 'limpieza', 'liquidación', 'cosméticos', 'abarrotes', 'muebles'];
            let placeholderIndex = 0;
            let isPlaceholderAnimating = false;
            function efectoEscrituraPlaceholder() {
                if (isPlaceholderAnimating || !catSearchInput || document.activeElement === catSearchInput) { // Don't animate if focused
                     if (document.activeElement !== catSearchInput) isPlaceholderAnimating = false; // Reset if not focused
                     return;
                }
                isPlaceholderAnimating = true;
                
                catSearchInput.placeholder = `¿Qué necesita tu humano hoy? Ej: ${categoriasPlaceholder[placeholderIndex]}`;
                // catSearchInput.classList.add('placeholder-transition'); // CSS for transition if desired
                
                placeholderIndex = (placeholderIndex + 1) % categoriasPlaceholder.length;
                
                setTimeout(() => {
                    // if (catSearchInput) catSearchInput.classList.remove('placeholder-transition');
                    isPlaceholderAnimating = false;
                    if (catSearchInput && catSearchInput.value === '' && document.activeElement !== catSearchInput) efectoEscrituraPlaceholder(); 
                }, 2500);
            }
            if (catSearchInput.value === '' && document.activeElement !== catSearchInput) efectoEscrituraPlaceholder(); 
            catSearchInput.addEventListener('focus', () => { /* Stop animation on focus */ isPlaceholderAnimating = true; }); // effectively stops by setting flag
            catSearchInput.addEventListener('blur', () => { 
                isPlaceholderAnimating = false; // Allow animation to restart if blurred and empty
                if (catSearchInput.value === '') efectoEscrituraPlaceholder();
            });
        }
        
        
        // Cart toggle
        const cartToggleBtn = document.getElementById('header-cart-menu');
        const cartContainerDiv = document.getElementById('header-cart'); 
        if (cartToggleBtn && cartContainerDiv) {
            cartToggleBtn.addEventListener('click', function(event) {
                event.preventDefault();
                const isExpanded = cartContainerDiv.classList.toggle('active');
                cartToggleBtn.setAttribute('aria-expanded', isExpanded);
            });
        }

        // Peeking Cats
        const catImages = [
            'https://cdn-icons-png.flaticon.com/512/763/763714.png',
            'https://cdn-icons-png.flaticon.com/512/763/763721.png',
            'https://cdn-icons-png.flaticon.com/512/763/763725.png',
            'https://cdn-icons-png.flaticon.com/512/763/763730.png',
            'https://cdn-icons-png.flaticon.com/512/763/763705.png'
        ];
        function createPeekingCat() {
            const cat = document.createElement('img');
            cat.src = catImages[Math.floor(Math.random() * catImages.length)];
            cat.alt = ""; // Decorative
            cat.className = 'peeking-cat';
            
            const positions = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];
            const positionClass = positions[Math.floor(Math.random() * positions.length)];
            cat.classList.add(positionClass);
            
            document.body.appendChild(cat);
            
            setTimeout(() => cat.remove(), 4900 + (Math.random() * 2000)); // Slightly varied removal time
        }
        setInterval(createPeekingCat, 7000 + (Math.random() * 3000)); // Varied interval


        // Banner Cat Icon Animation
        const bannerCatIcon = document.querySelector('.banner-cat-icon');
        if (bannerCatIcon) {
            const heroAudio = new Audio('https://cdn.pixabay.com/download/audio/2024/03/04/audio_3c667852ad.mp3?filename=superhero-theme-extended-194335.mp3');
            heroAudio.volume = 0.3; // Reduced volume
            bannerCatIcon.addEventListener('click', function() {
                if (heroAudio.paused) { // Play only if paused
                    heroAudio.currentTime = 2; 
                    heroAudio.play().catch(e => console.warn("Audio play failed for banner icon:", e));
                }
                
                const original = this;
                if (original.classList.contains('animating')) return; // Prevent multi-clicks
                original.classList.add('animating');

                const originalRect = original.getBoundingClientRect();
                
                original.style.opacity = '0.5'; // Keep slightly visible, non-interactive
                original.style.pointerEvents = 'none';
                
                const clone = original.cloneNode(true); 
                
                clone.dataset.originalTop = originalRect.top + window.scrollY; 
                clone.dataset.originalLeft = originalRect.left + window.scrollX;
                
                clone.style.position = 'fixed';
                clone.style.top = `${originalRect.top}px`;
                clone.style.left = `${originalRect.left}px`;
                clone.style.width = `${originalRect.width}px`;
                clone.style.height = `${originalRect.height}px`;
                clone.style.zIndex = '9999';
                clone.style.transition = 'all 2s cubic-bezier(0.33, 1, 0.68, 1)';
                clone.style.margin = '0'; 
                clone.style.opacity = '1'; // Ensure clone is fully visible initially

                document.body.appendChild(clone);
                
                requestAnimationFrame(() => {
                    clone.style.top = '50%';
                    clone.style.left = '50%';
                    clone.style.transform = 'translate(-50%, -180%) scale(2.8) rotate(540deg)';
                });
                
                setTimeout(() => {
                    clone.style.transition = `
                        top 2s cubic-bezier(0.34, 1.56, 0.64, 1),
                        left 2s cubic-bezier(0.34, 1.56, 0.64, 1),
                        transform 2s cubic-bezier(0.34, 1.56, 0.64, 1),
                        opacity 0.5s ease 1.5s
                    `;
                    clone.style.top = `${parseFloat(clone.dataset.originalTop) - window.scrollY}px`; 
                    clone.style.left = `${parseFloat(clone.dataset.originalLeft) - window.scrollX}px`;
                    clone.style.transform = 'scale(1) rotate(0deg)';
                    
                    setTimeout(() => {
                        clone.style.opacity = '0';
                        setTimeout(() => {
                            clone.remove();
                            original.style.opacity = '1';
                            original.style.pointerEvents = 'auto';
                            original.classList.remove('animating');
                            if (!heroAudio.paused) { // Pause only if it was playing
                                heroAudio.pause();
                                heroAudio.currentTime = 0;
                            }
                        }, 500);
                    }, 2000);
                }, 2500);
            });
        }
        
        window.showVideoGuide = function(trigger) { 
            showModal('tiktokModal', trigger); // Pass trigger for focus return
        }
        window.showHelpOptions = function(trigger) { showModal('helpModal', trigger); }
        window.showPedidoModal = function(trigger) { 
            showModal('pedidoModal', trigger);
        }

        window.filterByCategory = function() { showAppNotification('Filtrando por categoría...', 'info'); closeModal('helpModal'); }
        window.filterByDesign = function() { showAppNotification('Filtrando por diseño...', 'info'); closeModal('helpModal'); }
        window.filterByPrice = function() { showAppNotification('Filtrando por precio...', 'info'); closeModal('helpModal'); }
        window.filtrar = function(tipo) { showAppNotification(`Filtrando por ${tipo}...`, 'info'); closeModal('pedidoModal');}

        // Chatbot
        const chatBotContainer = document.getElementById('chatBot');
        const chatIconTriggerContainer = document.querySelector('.cat-bot-container');
        const chatIconTrigger = document.querySelector('.cat-bot-icon');
        const chatMessagesDiv = document.getElementById('chatMessages');
        const chatUserInput = document.getElementById('userInput'); 
        const sendChatButton = document.getElementById('sendChatBtn');
        const chatCloseButton = chatBotContainer ? chatBotContainer.querySelector('.close-chat') : null;
        let isChatVisible = false;
        let botTooltipTimeout;
        let typingIndicatorTimeout;

        if (chatIconTriggerContainer) {
            chatIconTriggerContainer.addEventListener('click', (e) => {
                isChatVisible = !isChatVisible;
                if (chatBotContainer) {
                    chatBotContainer.classList.toggle('visible', isChatVisible);
                    chatIconTriggerContainer.setAttribute('aria-expanded', isChatVisible);
                    if (isChatVisible) {
                        chatBotContainer.querySelector('input, button').focus(); // Focus first interactive in chat
                    } else if (document.activeElement === chatBotContainer || chatBotContainer.contains(document.activeElement)){
                        chatIconTriggerContainer.focus(); // Return focus to trigger
                    }
                }
            });
            chatIconTriggerContainer.addEventListener('keydown', (e) => {
                if (e.key === 'Enter' || e.key === ' ') {
                    e.preventDefault();
                    chatIconTriggerContainer.click();
                }
            });

            if (chatIconTrigger) { // Mouse hover for tooltip remains on icon itself
                chatIconTrigger.addEventListener('mouseenter', () => {
                    clearTimeout(botTooltipTimeout);
                    chatIconTrigger.classList.add('active');
                });
                chatIconTrigger.addEventListener('mouseleave', () => {
                    botTooltipTimeout = setTimeout(() => chatIconTrigger.classList.remove('active'), 300);
                });
            }
             // Occasional animation reset for bot icon
            setInterval(() => {
                if(chatIconTrigger) {
                    chatIconTrigger.style.animation = 'none';
                    requestAnimationFrame(() => {
                        chatIconTrigger.style.animation = 'bot-float 3s ease-in-out infinite';
                    });
                }
            }, 15000);
        }

        if (chatCloseButton) {
            chatCloseButton.addEventListener('click', () => {
                if (chatBotContainer) chatBotContainer.classList.remove('visible');
                isChatVisible = false;
                chatIconTriggerContainer.setAttribute('aria-expanded', 'false');
                chatIconTriggerContainer.focus(); // Return focus to the trigger button
                new Audio('https://cdn.pixabay.com/audio/2022/03/24/click.mp3').play().catch(e=>console.warn(e));;
            });
        }
        
        function showTypingIndicator() {
            if (!chatMessagesDiv) return;
            clearTimeout(typingIndicatorTimeout); // Clear any existing timer

            let indicator = chatMessagesDiv.querySelector('.bot-typing-indicator');
            if (!indicator) {
                indicator = document.createElement('div');
                indicator.className = 'bot-message bot-typing-indicator'; // Use bot-message for styling consistency
                indicator.innerHTML = `<img src="https://cdn-icons-png.flaticon.com/512/763/763703.png" alt="" style="width: 30px; height: 30px; border-radius: 50%; flex-shrink: 0;"><p>Balatin está escribiendo<span>.</span><span>.</span><span>.</span></p>`;
                chatMessagesDiv.appendChild(indicator);
            }
            indicator.style.display = 'flex';
            chatMessagesDiv.scrollTop = chatMessagesDiv.scrollHeight;
        }

        function hideTypingIndicator() {
            const indicator = chatMessagesDiv.querySelector('.bot-typing-indicator');
            if (indicator) {
                indicator.style.display = 'none';
            }
        }

        function sendChatMessage() {
            if (!chatUserInput || !chatMessagesDiv) return;
            const message = chatUserInput.value.trim();
            if (!message) return;

            const userMsgDiv = document.createElement('div');
            userMsgDiv.className = 'user-message';
            userMsgDiv.innerHTML = `<p>${message}</p>`;
            chatMessagesDiv.appendChild(userMsgDiv);
            
            chatUserInput.value = '';
            chatMessagesDiv.scrollTop = chatMessagesDiv.scrollHeight;
            chatUserInput.focus(); // Keep focus on input

            showTypingIndicator();

            typingIndicatorTimeout = setTimeout(() => { // Simulate bot thinking
                hideTypingIndicator();
                const response = getChatBotResponse(message.toLowerCase());
                const botMsgDiv = document.createElement('div');
                botMsgDiv.className = 'bot-message';
                botMsgDiv.innerHTML = `<img src="https://cdn-icons-png.flaticon.com/512/763/763703.png" alt="Avatar de Balatin"><p>${response}</p>`;
                chatMessagesDiv.appendChild(botMsgDiv);
                chatMessagesDiv.scrollTop = chatMessagesDiv.scrollHeight;
                new Audio('https://v1.cdnpk.net/videvo_files/audio/premium/audio0060/watermarked/CatMeow%20PE530413_preview.mp3').play().catch(e=>console.warn("Chat audio failed:", e));
            }, 1200 + Math.random() * 800); // Random delay for typing
        }

        if (sendChatButton) sendChatButton.addEventListener('click', sendChatMessage);
        if (chatUserInput) {
            chatUserInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    e.preventDefault(); // Prevent form submission if inside a form
                    sendChatMessage();
                }
            });
        }
        
        const suggestionButtons = document.querySelectorAll('.chat-suggestions .suggestion-btn');
        suggestionButtons.forEach(button => {
            button.addEventListener('click', () => {
                const suggestionText = button.dataset.suggestion;
                if (chatUserInput && suggestionText) {
                    chatUserInput.value = suggestionText;
                    sendChatMessage();
                }
            });
        });

        function getChatBotResponse(input) {
            if (input.includes('hola') || input.includes('saludos')) return '¡Miau! Hola humano, ¿cómo puedo ayudarte a encontrar tesoros hoy? 😺';
            if (input.includes('productos') || input.includes('tienes')) return '¡Tenemos de todo un poco! Juguetes, artículos para el hogar, electrónicos y más sorpresas. ¿Buscas algo en especial?';
            if (input.includes('pedido') || input.includes('comprar')) return 'Para hacer un pedido, puedes buscar lo que necesitas en la barra de búsqueda de arriba o visitar directamente nuestra tienda en <a href="https://donbalatomayorista.cl" target="_blank" rel="noopener noreferrer" style="color: #FF6B35; text-decoration: underline;">donbalatomayorista.cl</a>. ¡Es muy fácil! 🐾';
            if (input.includes('ofertas')) return '¡Claro! Las mejores ofertas y ronroneos de precios están en <a href="https://donbalatomayorista.cl/collections/all" target="_blank" rel="noopener noreferrer" style="color: #FF6B35; text-decoration: underline;">nuestra web</a>. Busca las etiquetas rojas, ¡son un chollo! 😻';
            if (input.includes('gracias') || input.includes('muchas gracias')) return '¡De nada! Siempre feliz de ayudar a un humano curioso. ¡Miau! 😊';
            return '¡Miau! Aún estoy aprendiendo y esa pregunta es un poco complicada para mis bigotes. Intenta preguntarme sobre productos, pedidos u ofertas. Pronto seré más listo. 😸';
        }
        
        // Click outside to close modals and cart
        window.addEventListener('click', function(event) {
            const activeModals = document.querySelectorAll('.survey-modal[style*="display: flex"], .cat-modal[style*="display: flex"], .tiktok-modal[style*="display: flex"]');
            activeModals.forEach(modal => {
                if (event.target === modal) { 
                    closeModal(modal.id);
                    if (modal.id === 'surveyModal') resetSurvey(); 
                }
            });
            const activeCart = document.querySelector('.cart-container.active');
            if (activeCart && !activeCart.contains(event.target) && event.target !== cartToggleBtn) {
                activeCart.classList.remove('active');
                cartToggleBtn.setAttribute('aria-expanded', 'false');
            }
        });

        // Back to Top Button Logic
        const backToTopButton = document.getElementById('back-to-top-btn');
        if (backToTopButton) {
            window.addEventListener('scroll', () => {
                if (window.pageYOffset > 300) { // Show button after scrolling 300px
                    backToTopButton.classList.add('visible');
                } else {
                    backToTopButton.classList.remove('visible');
                }
            });
            backToTopButton.addEventListener('click', () => {
                window.scrollTo({ top: 0, behavior: 'smooth' });
            });
        }

    }); // End DOMContentLoaded
    </script>
    <script async src="https://www.tiktok.com/embed.js" onerror="console.warn('TikTok embed script failed to load.')"></script> 
</body>
</html>
